import _ = require("lodash")
import type { TileDef } from './TileDef'

// Starts 28 to 41
enum FurnitureTileSequence {
    Grave = 0,
    GraveCracked,
    GraveDestroyed,
    Bones1,
    Bones2,
    Bones3,
    Bones4,
    Bones5,
    Bones6,
    Bones7,
    Fire1,
    Fire2,
    Torch1,
    Torch2,
    WebNorthWest,
    WebNorthEast,
    WebEastSouth,
    WebSouthWest,
    WebIntersection1,
    WebIntersection2,
    BloodPool,
    BloodSpatter2,
    BloodSpatter3,
    BloodSpatter4,
    AcidPool,
    AcidSpatter,
    Brazier1,
    Brazier2,
    DoorClosed,
    DoorOpen,
    DoorBarred,
    DoorNoHandle,
    DoorBarredBack,
    DoorBroken,
    DoorAjar,
    MetalDoor,
    MetalDoorOpen,
    IcyDoor,
    IcyDoorOpen,
    DoorBoarded,
    DoorBoardedBroken,
    DoorPortal,
    Porticullis,
    PorticullisOpen,
    DoorGlass,
    Chest,
    ChestOpenGold,
    ChestOpenSpikes,
    ChestOpen,
    Coffin,
    CoffinOpen,
    CoffinAjar,
    Barrel,
    BarrelBroken,
    Bucket,
    Bucket2,
    Trapdoor,
    TrapdoorOpen,
    Bookshelf,
    BookshelfEmpty,
    Table,
    TableWithPaper,
    ChairSouth,
    ThroneSouth,
    SwordRack,
    SwordRack2,
    ChestSouth,
    ChestSouthOpenGold,
    Crate,
    CrateOpen,
    Unused,
    Unused1,
    Cauldron,
    Cauldron2,
    StatueMage,
    StatueBroken,
    StatueArcher,
    StatueFighter,
    VasePillar,
    VasePillarCracked,
    VasePillarBroken,
    Vase,
    VaseCracked,
    VaseBroken,
    Spikes,
    AlchemyCircle,
    AlchemyCirclePentagram,
    AlchemyCircleSkull,
    BearTrap,
    Chute,
    Grate,
    Grate2,
    VaseBlue,
    VaseBlueCracked,
    VaseBlueBroken,
    VaseGreen,
    VaseGreenCracked,
    VaseGreenBroken,
    Fountain,
    FountainOff,
    TombstoneGem,
    TombstoneSnakes,
    TombstoneHead,
    TombstoneRing,
    TombstoneCross,
    TombstoneBroken,
    VaseRed,
    VaseRedCracked,
    VaseRedBroken,
    VaseBrown,
    VaseBrownCracked,
    VaseBrownBroken,
    Cage,
    MetalCage,
    Cage2,
    MetalCage2,
    WellSite,
    Well,
    Hay,
    HayGrey,
    BookRed,
    BookBlack,
    BookBlue,
    BookGreen,
    Skull,
    SkullYak,
    TableEast,
    TableEastWest,
    TableWest,
    TableEastPlates,
    TableWestPlates,
    BenchEast,
    BenchEastWest,
    BenchWest,
    BookRed2,
    BookBlack2,
    BookBlue2,
    BookGreen2,
    Skull2,
    Ribcage,
    Moon,
    MoonBlue,
    MoonPurple,
    MoonOrange,
    MoonCracked,
    MoonBlueRings
}

export type FurnitureTileDefId = keyof typeof FurnitureTileSequence

export const FurnitureTileDefOf = (() => {
    const cols = 55
    const subcols = 14
    const startIndex = 28
    const tilesetId = 'world'

    const tilesByName: Record<string, TileDef> = {}
    for (const key in FurnitureTileSequence) {
        const num = (FurnitureTileSequence[key] as any) as number | string
        if (!_.isNumber(num)) continue

        const subcol = num % subcols
        const row = Math.floor(num / subcols)
        const index = (cols * row) + startIndex + subcol
        tilesByName[key] = { tilesetId: tilesetId, index: index }
    }
    return tilesByName as Record<keyof typeof FurnitureTileSequence, TileDef>
})()
